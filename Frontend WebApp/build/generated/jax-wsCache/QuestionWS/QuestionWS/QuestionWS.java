
package QuestionWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param idQuestion
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestion")
    @ResponseWrapper(localName = "getQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionRequest", output = "http://QuestionModel/QuestionWS/getQuestionResponse")
    public List<Question> getQuestion(
        @WebParam(name = "id_question", targetNamespace = "")
        int idQuestion);

    /**
     * 
     * @param idUser
     * @param topic
     * @param content
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.AddQuestion")
    @ResponseWrapper(localName = "addQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.AddQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/addQuestionRequest", output = "http://QuestionModel/QuestionWS/addQuestionResponse")
    public boolean addQuestion(
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content,
        @WebParam(name = "id_user", targetNamespace = "")
        int idUser);

    /**
     * 
     * @param idQuestion
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.DeleteQuestion")
    @ResponseWrapper(localName = "deleteQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.DeleteQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/deleteQuestionRequest", output = "http://QuestionModel/QuestionWS/deleteQuestionResponse")
    public boolean deleteQuestion(
        @WebParam(name = "id_question", targetNamespace = "")
        int idQuestion);

    /**
     * 
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "getQuestions", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestions")
    @ResponseWrapper(localName = "getQuestionsResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionsResponse")
    @Action(input = "http://QuestionModel/QuestionWS/getQuestionsRequest", output = "http://QuestionModel/QuestionWS/getQuestionsResponse")
    public List<Question> getQuestions();

    /**
     * 
     * @param idQuestion
     * @param topic
     * @param content
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.EditQuestion")
    @ResponseWrapper(localName = "editQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.EditQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/editQuestionRequest", output = "http://QuestionModel/QuestionWS/editQuestionResponse")
    public boolean editQuestion(
        @WebParam(name = "id_question", targetNamespace = "")
        int idQuestion,
        @WebParam(name = "topic", targetNamespace = "")
        String topic,
        @WebParam(name = "content", targetNamespace = "")
        String content);

}
